/* Generated by FrontendCore */


<% if (fontfaceStyles) { %>
<% if (fontSrc1 && embed.length) { %>
@font-face {
    font-family:"<%= fontBaseName %>";
    src:<%= fontSrc1 %>;
    font-weight:normal;
    font-style:normal;
}
<% } %>@font-face {
	font-family:"<%= fontBaseName %>";<% if (fontSrc1) { %>
	src:<%= fontSrc1 %>;<% }%>
	src:<%= fontSrc2 %>;
	font-weight:normal;
	font-style:normal;
}
<% } %>

i[class*='<%= classPrefix %>'],
[class*='<%= classPrefix %>']:not(i):before, .couple-icon [class*='<%= classPrefix %>']:last-child:after
{
	display: inline-block;
	font: normal normal normal 14px/1 <%= fontBaseName %>;
	font-size: inherit;
	text-rendering: auto;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	vertical-align: middle;
}
/* makes the font 33% larger relative to the icon container */
[class*='<%= classPrefix %>']._lg {
	font-size: 1.33333333em;
	line-height: 0.75em;
	vertical-align: -15%;
}
[class*='<%= classPrefix %>'].icon-large,
[class*='<%= classPrefix %>']._large
{
	font-size: 1.5em;
}
[class*='<%= classPrefix %>']._2x,
.couple-icon._2x
{
	font-size: 2em;
}
[class*='<%= classPrefix %>']._3x,
.couple-icon._3x {
	font-size: 3em;
}
[class*='<%= classPrefix %>']._4x,
.couple-icon._4x
{
	font-size: 4em;
}
[class*='<%= classPrefix %>']._5x,
.couple-icon._5x
{
	font-size: 5em;
}
[class*='<%= classPrefix %>']._fw,
.couple-icon._fw [class*='<%= classPrefix %>']
{
	width: 1.28571429em;
	text-align: center;
}
[class*='<%= classPrefix %>']._ul {
	padding-left: 0;
	margin-left: 2.14285714em;
	list-style-type: none;
}
[class*='<%= classPrefix %>']._ul > li {
	position: relative;
}
[class*='<%= classPrefix %>']._li {
	position: absolute;
	left: -2.14285714em;
	width: 2.14285714em;
	top: 0.14285714em;
	text-align: center;
}
[class*='<%= classPrefix %>']._li._lg {
	left: -1.85714286em;
}
[class*='<%= classPrefix %>']._border {
	padding: .2em .25em .15em;
	border: solid 0.08em #eeeeee;
	border-radius: .1em;
}
[class*='<%= classPrefix %>']._pull-left,
.couple-icon._pull-left {
	float: left;
}
[class*='<%= classPrefix %>']._pull-right,
.couple-icon._pull-right {
	float: right;
}
[class*='<%= classPrefix %>']._pull-left,
.couple-icon._pull-left {
	margin-right: .3em;
}
[class*='<%= classPrefix %>']._pull-right,
.couple-icon._pull-right {
	margin-left: .3em;
}

[class*='<%= classPrefix %>']._spin,
.couple-icon._spin {
	-webkit-animation: fa-spin 2s infinite linear;
	animation: fa-spin 2s infinite linear;
}
[class*='<%= classPrefix %>']._pulse,
.couple-icon._pulse {
	-webkit-animation: fa-spin 1s infinite steps(8);
	animation: fa-spin 1s infinite steps(8);
}
.couple-icon {
	display: inline-block;
	position: relative;
}
.couple-icon [class*='<%= classPrefix %>']:last-child {
	font-size: .55em;
	position: absolute;
	bottom: -.4em;
	right: -.4em;
}
.couple-icon [class*='<%= classPrefix %>']:last-child:before {
	position: relative;
	z-index: 100;
}
.couple-icon [class*='<%= classPrefix %>']:last-child:after {
	position: absolute;
	left: -1px;
	top: -1px;
	color: #FFF;
	zoom: 1.15;
	-webkit-text-stroke: 1px #FFF;
}

@-webkit-keyframes fa-spin {
	0% {
		-webkit-transform: rotate(0deg);
		transform: rotate(0deg);
	}
	100% {
		-webkit-transform: rotate(359deg);
		transform: rotate(359deg);
	}
}
@keyframes fa-spin {
	0% {
		-webkit-transform: rotate(0deg);
		transform: rotate(0deg);
	}
	100% {
		-webkit-transform: rotate(359deg);
		transform: rotate(359deg);
	}
}
[class*='<%= classPrefix %>']._rotate-90 {
	-ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=1)";
	-webkit-transform: rotate(90deg);
	-ms-transform: rotate(90deg);
	transform: rotate(90deg);
}
[class*='<%= classPrefix %>']._rotate-180 {
	-ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2)";
	-webkit-transform: rotate(180deg);
	-ms-transform: rotate(180deg);
	transform: rotate(180deg);
}
[class*='<%= classPrefix %>']._rotate-270 {
	-ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=3)";
	-webkit-transform: rotate(270deg);
	-ms-transform: rotate(270deg);
	transform: rotate(270deg);
}
[class*='<%= classPrefix %>']._flip-horizontal {
	-ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)";
	-webkit-transform: scale(-1, 1);
	-ms-transform: scale(-1, 1);
	transform: scale(-1, 1);
}
[class*='<%= classPrefix %>']._flip-vertical {
	-ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";
	-webkit-transform: scale(1, -1);
	-ms-transform: scale(1, -1);
	transform: scale(1, -1);
}
:root [class*='<%= classPrefix %>']._rotate-90,
:root [class*='<%= classPrefix %>']._rotate-180,
:root [class*='<%= classPrefix %>']._rotate-270,
:root [class*='<%= classPrefix %>']._flip-horizontal,
:root [class*='<%= classPrefix %>']._flip-vertical {
	filter: none;
}
[class*='<%= classPrefix %>']._stack {
	position: relative;
	display: inline-block;
	width: 2em;
	height: 2em;
	line-height: 2em;
	vertical-align: middle;
}
[class*='<%= classPrefix %>']._stack-1x,
[class*='<%= classPrefix %>']._stack-2x {
	position: absolute;
	left: 0;
	width: 100%;
	text-align: center;
}
[class*='<%= classPrefix %>']._stack-1x {
	line-height: inherit;
}
[class*='<%= classPrefix %>']._stack-2x {
	font-size: 2em;
}
[class*='<%= classPrefix %>']._inverse {
	color: #ffffff;
}
.sr-only {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	border: 0;
}
.sr-only-focusable:active,
.sr-only-focusable:focus {
	position: static;
	width: auto;
	height: auto;
	margin: 0;
	overflow: visible;
	clip: auto;
}
<% if (iconsStyles) { %>/* Icons */<% for (var glyphIdx = 0; glyphIdx < glyphs.length; glyphIdx++) { %>
<% if (stylesheet === 'less') { %>
.<%= classPrefix %><%= glyphs[glyphIdx] %> {
	&:before {
		content:"<% if (addLigatures) { %><%= glyphs[glyphIdx] %><% } else { %>\<%= codepoints[glyphIdx] %><% } %>";
	}
	<% if (ie7) {%>
	*zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#x<%= codepoints[glyphIdx] %>;');
	<% } %>
}<% } else { %>
<% if (ie7) {%>.<%= classPrefix %><%= glyphs[glyphIdx] %> {
	*zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#x<%= codepoints[glyphIdx] %>;');
}
<% } %>
.<%= classPrefix %><%= glyphs[glyphIdx] %>:before {
	content:"<% if (addLigatures) { %><%= glyphs[glyphIdx] %><% } else { %>\<%= codepoints[glyphIdx] %><% } %>";
}
.couple-icon .<%= classPrefix %><%= glyphs[glyphIdx] %>:last-child:after {
	content:"<% if (addLigatures) { %><%= glyphs[glyphIdx] %><% } else { %>\<%= codepoints[glyphIdx] %><% } %>";
}<% } %>
<% } } %>
