.navigation-flex {
	& {
		border-radius: map-get($object-navigation-vars, border-radius);
		font-size: map-get($object-navigation-vars, font-size);
		position: relative;
	}
	a {
		display: block;
		text-decoration: none;
		margin: 0;
	}
	li{
		list-style: none;
	}
	>ul{
		display: flex;
		flex-flow: row nowrap;
		> li{
			flex: 1 1 0;
			text-align: center;
			&:hover{
				>ul{
					max-height: 100vh;
				}
			}
		}
		a{
			padding: $spacing/2;
		}
	}
	>ul > li > ul{
		position: absolute;
		overflow: hidden;
		left: 0;
		width: 100%;
		z-index: 10;
		display: flex;
		max-height: 0;
		box-shadow: rgba(contrast-color(white), 0.2) 0px 5px 13px;
		li{
			flex: 1 1 0;
			text-align: left;
		}
		a{
			padding: $spacing/2 $spacing/2 $spacing/4 $spacing/2;
		}
	}
	>ul > li > ul > li > ul{
		display: block;
		position: relative;
		li{
			display: block;
			font-size: map-get($object-navigation-vars, font-size) * .85;
		}
		a{
			padding: $spacing/4 $spacing/4 $spacing/4 $spacing/2;
		}
	}
	a {
		font-family: map-get($object-navigation-vars, font-family);
		font-weight: map-get($object-navigation-vars, font-weight);
		text-rendering: optimizeLegibility;
		text-transform: map-get($object-navigation-vars, text-transform);
	}

	$local-color-names: 'foreground','background','primary','secondary','box';
	@each $color-name in $local-color-names {
		&._#{$color-name} {
			&, a {
				color: contrast-color(map_get($colors, $color-name));
			}
			& {
				background: map_get($colors, $color-name);
			}
			>ul > li > ul{
				background: $color-background;
			}
			>ul > li > ul a{
				color: contrast-color($color-background);
			}
			a {
				&:hover {
					background: rgba(contrast-color(map_get($colors, $color-name)), .08);
				}
			}
			li.active {
				a {
					& {
						background: rgba(contrast-color(map_get($colors, $color-name), $color-background, $color-foreground), .2);
						color: contrast-color(map_get($colors, $color-name));
					}
					&:before {
						color: rgba(contrast-color(map_get($colors, $color-name)), .5) !important;
					}
				}
			}
		}
	}
}