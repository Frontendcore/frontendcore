@if $object-pagination != false and $ui != true {

	.pagination {
		& {
			overflow: hidden;
			margin-bottom: $spacing/2;
			clear: both;
			width: auto;
			text-align: map-get($object-pagination-vars, text-align);
			color: map-get($object-pagination-vars, color);
			padding: map-get($object-pagination-vars, padding);
			background: map-get($object-pagination-vars, background-color);
			font-family: map-get($object-pagination-vars, font-family);
			@include rem-fallback(font-size, map-get($object-pagination-vars, font-size) );

		}
		&.right {
			float: right;
		}
		ul {
			word-spacing: inherit !important;
			letter-spacing: inherit !important;
		}
		li {
			display: inline-block;
			padding: 0 1px;
		}
		a {
			& {
				display: block;
				padding: map-get($object-pagination-vars, padding-page);
				line-height: 100%;
				@if (map-get($object-pagination-vars, min-width) != 'false') {
					min-width: map-get($object-pagination-vars, min-width-page);
				}
				margin-bottom: $spacing/4;
				text-decoration: none;
				font-weight: map-get($object-pagination-vars, font-weight);
				@include border-radius(map-get($object-pagination-vars, border-radius-page));
				color: map-get($object-pagination-vars, color);
				background-color: map-get($object-pagination-vars, background-color-page);
				border-width: map-get($object-pagination-vars, border-width-page);
				border-style: map-get($object-pagination-vars, border-style-page);
				border-color: map-get($object-pagination-vars, border-color-page);
				min-height: 1rem;
			}
			&:hover {
				background: map-get($object-pagination-vars, background-color-hover);
				color: map-get($object-pagination-vars, color-hover);
			}
		}
		.active {
			a {
				background: map-get($object-pagination-vars, background-color-active);
				color: map-get($object-pagination-vars, color-active);
				border-color: map-get($object-pagination-vars, border-color-active);
				font-weight: map-get($object-pagination-vars, font-weight-active);
			}
		}
	}
}