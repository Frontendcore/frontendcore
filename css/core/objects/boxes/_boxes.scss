@if $object-boxes != false and $ui != true {

	[class*='box-'], .box {
		@include box-sizing(border-box);
		@include border-radius;
		margin-bottom: $spacing/2;
		padding: $spacing/2;
		overflow: hidden;
	}

	.box {
		& {
			background: $color-box;
			color: contrast-color($color-box);
		}
		.box-lighten {
			background: $color-background;
		}
	}

	.box-background {
		& {
			background: $color-background;
			color: contrast-color($color-background);
		}
		& > .box-lighten {
			background: $color-box;
		}
		.box-background {
			border: 1px solid $color-box;
		}
	}

	.box-foreground {
		background: $color-foreground;
		color: contrast-color($color-foreground);
	}

	.box-ok {
		background: $color-ok;
		color: contrast-color(darken($color-ok, 10%));
	}

	.box-ko {
		background: $color-ko;
		color: contrast-color($color-ko, $color-foreground, $color-background);
	}

	.box-info {
		background: $color-info;
		color: contrast-color($color-info, $color-foreground, $color-background);
	}

	.box-warning {
		background: $color-warning;
		color: contrast-color($color-warning, $color-foreground, $color-background);
	}

	.box-darken {
		@include background-transparent($color-foreground, .3);
		color: $color-background;
		@include box-shadow(none);
	}

	.box-lighten {
		@include background-transparent($color-background, .3);
		color: $color-foreground;
		@include box-shadow(none);
	}

	.box-primary {
		& {
			background: $color-primary;
			color: contrast-color($color-primary, $color-foreground, $color-background);
		}
		a {
			color: contrast-color($color-primary, $color-foreground, $color-background);
		}
	}

	.box-secondary {
		background: $color-secondary;
		color: $color-background;
	}
}

@mixin papa-boxes() {
	[class*='box-'], .box {
		margin-bottom: $spacing;
		padding: $spacing;
	}
}